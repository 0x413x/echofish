<?php

/**
 * BaseSearchbookmark
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $query
 * @property integer $user_id
 * @property  $
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: BaseSearchbookmark.php,v 1.1 2011/09/02 10:17:13 proditis Exp $
 */
abstract class BaseSearchbookmark extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('searchbookmark');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->hasColumn('container', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));

        $this->hasColumn('module', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));

        $this->hasColumn('action', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));

        $this->hasColumn('query', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('name_index', array(
             'fields' => 
             array(
              'name' => 
              array(
              ),
             ),
             'type' => 'unique',
             ));
        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
        	 'local' => 'user_id',
        	 'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
        $this->hasMany('SearchbookmarkTag', array(
             'local' => 'id',
             'foreign' => 'searchbookmark_id'));
             
    }
}