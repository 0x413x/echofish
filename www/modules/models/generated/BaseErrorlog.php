<?php

/**
 * BaseErrorlog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $errno
 * @property string $errstr
 * @property string $errfile
 * @property integer $errline
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: BaseErrorlog.php,v 1.2 2011/08/27 09:23:59 proditis Exp $
 */
abstract class BaseErrorlog extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('errorlog');
        $this->hasColumn('errno', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('errstr', 'string', 5000, array(
             'type' => 'string',
             'length' => '5000',
             ));
        $this->hasColumn('errfile', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('errline', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('request', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));


        $this->index('errno_index', array(
             'fields' => 
             array(
              'errno' => 
              array(
              ),
             ),
             ));
        $this->index('errline_index', array(
             'fields' => 
             array(
              'errline' => 
              array(
              ),
             ),
             ));
        $this->index('errstr_index', array(
             'fields' => 
             array(
              'errstr' => 
              array(
              'length' => 250,
              ),
             ),
             ));
        $this->index('errfile_index', array(
             'fields' => 
             array(
              'errfile' => 
              array(
              'length' => 250,
              ),
             ),
             ));
        $this->option('connection', 'globocam_classic');
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}